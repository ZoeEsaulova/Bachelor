<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- jQuery -->
    <script type="text/javascript" src="onlinefolio/layout/scripts/jquery.min.js"></script>
    <script type="text/javascript" src="onlinefolio/layout/scripts/jquery.slidepanel.setup.js"></script>

    <!--script type="text/javascript" src="javascripts/jquery.imgareaselect-0.9.10/scripts/jquery.min.js"></script-->
    <script type="text/javascript" src="javascripts/jquery.imgareaselect-0.9.10/scripts/jquery.imgareaselect.pack.js"></script>
    <link rel="stylesheet" type="text/css" href="javascripts/jquery.imgareaselect-0.9.10/css/imgareaselect-default.css" />
    <!--bootstrap-->
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    <!--script type="text/javascript" src="bootstrap-3.3.5/docs/assets/js/ie-emulation-modes-warning.js"></script>
    <script type="text/javascript" href="bootstrap-3.3.5/dist/js/bootstrap.min.js"></script>
    <script type="text/javascript" href="bootstrap-3.3.5/dist/js/bootstrap.js"></script-->
    <link href="bootstrap-3.3.5/docs/examples/starter-template/starter-template.css" rel="stylesheet">
    <link href="bootstrap-3.3.5/dist/css/bootstrap.min.css" rel="stylesheet"> 
    <!-- Open Layers 3 -->
    <link rel="stylesheet" href="http://openlayers.org/en/v3.10.1/css/ol.css" type="text/css">
    <script src="http://openlayers.org/en/v3.11.2/build/ol-debug.js" type="text/javascript"></script>
    <!-- LayerSwitcher -->
    <link rel="stylesheet" href="ol3-layerswitcher-master/src/ol3-layerswitcher.css" />
    <link rel="stylesheet" href="ol3-layerswitcher-master/examples/layerswitcher.css" />
    <script src="ol3-layerswitcher-master/src/ol3-layerswitcher.js"></script>
    <script src="ol3-layerswitcher-master/examples/layerswitcher.js"></script>
    <script src="ol3-layerswitcher-master/examples/addlayer.js"></script>

    <title>Geotagged images</title>
    <style type="text/css">
      img {
        width: 100%;
        margin-top: 50px
      }    
      #map {
        margin: 0;
        margin-top: 50px;
        z-index: 0;
      } 
      .col-lg-6 {
        margin-left: 0;
        margin-right: 0;
        padding-left: 0;
        padding-right: 0;
      }
      #hidden1 {
        right: 40px;
      }
      .form-control {
        white-space: nowrap;
      }
      .input {
        width: 70px;
        height: 35px; 
        white-space: nowrap;
        border-radius: 5px;
        position: relative;
        top: 3px;
      }
      button {
        margin: 2px;
        position: relative;
        top: 50%;
      }
      #get {
        margin-right: 1px;

      }
      #getObjects {

      }
      .well {
          background: rgba(255,0,0,0.2);
          margin: 0px;
          padding: 10px;
      }
      #next {
        position: relative;
        left: 85%;
        margin-top: 5px
      }
      #link {
        color: blue;
        text-decoration: underline;
      }
      .container {
        margin: 0px;
      }
      .form-group {
        text-align: center;;
      }
      .inputClass {
        margin-top: 0px;
        margin-left: 0px;
      }
    </style>
  </head>

  <% if (showBuilding) { %>
       <body onload="showBuildings('<%= buildingCoords %>','<%= properties %>', '<%= arrow %>', '0', <%= all %>)">
  <% } else { %>
       <body onload="showMarker(<%= properties %>, 'arrow', '0')">
  <% }%>
      <!-- Modal -->
      <div class="modal fade" id="modal" role="dialog">
        <div class="modal-dialog modal-lg">
        
          <!-- Modal content-->
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal">&times;</button>
              <h4 class="modal-title">Please evaluate the task you have just finished</h4>
            </div>
            <div class="modal-body">
        <form class="form-horizontal" style="margin: 5px;" method="post" action="/survey/next">
          <fieldset>
            <div class="form-group">
              <label for="inputEmail" class="col-lg-4 control-label"></label>
              <div class="col-lg-1">      
                  <label>
                    Strongly disagree
                  </label>             
              </div>
              <div class="col-lg-1">      
                  <label>
                    Disagree
                  </label>             
              </div>
              <div class="col-lg-1">      
                  <label>
                    Neutral
                  </label>             
              </div>
              <div class="col-lg-1">      
                  <label>
                    Agree
                  </label>             
              </div>
              <div class="col-lg-1">      
                  <label>
                    Strongly agree
                  </label>             
              </div>
            </div>
            <!--legend><h3 style="padding: 15px; color: rgba(28,195,200,1);">Please fill in the form first</h3></legend-->
            <div class="form-group" style="background-color: rgba(240,244,243,1);">
              <label for="inputEmail" class="col-lg-4 control-label">The task was easy</label>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="easy" value="option1" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="easy" value="option1"style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="easy" value="option1" checked="" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="easy" value="option1" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="easy" value="option1" style="margin: 0px;">
                </div>
              </div>
            </div>
            <div class="form-group">
              <label for="inputEmail" class="col-lg-4 control-label"> I was able to complete the task quickly</label>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="quickly" value="option1"style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="quickly" value="option1" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="quickly" value="option1" checked="" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="quickly" value="option1"style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="quickly" value="option1" style="margin: 0px;">
                </div>
              </div>
            </div>
            <div class="form-group" style="background-color: rgba(240,244,243,1);">
              <label for="inputEmail" class="col-lg-4 control-label">I felt comfortable making the task</label>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="comfortable" value="option1" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="comfortable" value="option1" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="comfortable" value="option1" checked="" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="comfortable" value="option1" style="margin: 0px;">
                </div>
              </div>
              <div class="col-lg-1">
                <div class="radio">
                  <input class="inputClass" type="radio" name="comfortable" value="option1" style="margin: 0px;">
                </div>
              </div>
            </div>
            <div class="form-group">
              <label for="textArea" class="col-lg-2 control-label">What did you find to be difficult about this task?</label>
              <div class="col-lg-10">
                <textarea class="form-control" rows="3" id="difficult"></textarea>
                <span class="help-block">(optional)</span>
              </div>
            </div>
            <div class="form-group">
              <label for="textArea" class="col-lg-2 control-label">What did you like about this task?</label>
              <div class="col-lg-10">
                <textarea class="form-control" rows="3" id="textArea" value="optional"></textarea>
                <span class="help-block">(optional)</span>
              </div>
            </div>
            <div class="form-group">
              <label for="textArea" class="col-lg-2 control-label">What didn't you like about the task?</label>
              <div class="col-lg-10">
                <textarea class="form-control" rows="3" id="textArea" value="optional"></textarea>
                <span class="help-block">(optional)</span>
              </div>
            </div>
            <input value="<%= nextImage %>" id="nextImage" name="nextImage" id="hidden1" hidden>
            <input value="x" id="mapRotation" name="mapRotation" hidden>
            <input value="x" id="lat" name="lat" hidden>
            <input value="x"id="lon" name="lon" hidden>
            <input value="<%= test %>" id="test" name="test" hidden>
            <input value="" id="knownModal" name="known" hidden>
            <!--input type="radio" name="knownYes" value="Yes" id="yesModal" onchange="setKnown();" hidden>
            <input type="radio" name="knownNo" value="No" id="noModal" onchange="setKnown();" hidden-->
            <div class="form-group">
              <div class="col-lg-2 col-lg-offset-10">
                <button type="submit" class="btn btn-primary">Submit</button>
              </div>
            </div>
          
          </fieldset>
        </form>
            </div>
            <!--div class="modal-footer">
              <button type="button" class="btn btn-default" data-dismiss="modal">Got it</button>
            </div-->
          </div>
          
        </div>
      </div>

  <!-- Navigation bar -->
    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="/">Task <%= test %></a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
            <li class="active">
              <input value="y" id="objectCoords" name="objectCoords" style="width:15" hidden>
              <input value="y" id="objectCoordsMap" name="objectCoordsMap" style="width:15" hidden>
              <input value="y" id="imageSize" name="imageSize" style="width:15" hidden>             
              <button onclick="submitObject(<%= properties %>)" hidden>Submit object</button>
            </li>
            <li>
            <form id="getObjects" action='/overpass' method='post' enctype="multipart/form-data" style="white-space: nowrap;">
              <input value="x" id="polyCoords" name="polyCoords" style="width:15" hidden>
              <button type="submit" style="white-space: nowrap;" hidden>Get Objects</button>
              </form>
              </li>
              <li>
              <button onclick="markObject()" style="white-space: nowrap;" hidden>Mark object</button>
              </li>
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </nav>

    <!-- Image and instractions -->
    <div class="container-fluid">
      <div class="row">
        <div class="col-lg-6">
          <img id="myImg" class="img-thumbnail" src=<%= imageSource %> alt="your image"/>
          <div style="padding-right: 10px; padding-left: 10px;">
          <h3 style="color: red; margin: 5px;" id="heading1" hidden>Instruction&nbsp;<%= test %>: </h3>
          <% if (test=="1") { %>
           <div class="well" id="instructionWell" hidden>You can see a photo and a map. An icon on the map marks the place where the photo has been taken. Please try to define the direction the camera was pointing at when the photo was taken.<br>Use <b>Shift + Left Mouse Key</b> to rotate the map so that the icon points at the right direction.<br> You can switch between satellite and map view and zoom in and out as you like. 
           <a target="_blank" href="/demo/<%= test %>" id="link">See Demo Video</a>
          </div>
            <% } else if (test=="2"){ %>
                 <div class="well" id="instructionWell" hidden>The icon on the map marks the place where the photo has been taken. All buildings within the 200-m radius are highlighted. Please do the following:<br>1. Click one building <b>on the map</b> to select it. It must be a building that you can see in the photo.<br>2. After you have selected a building on the map, a bounding box appears on the image. Move and resize the bounding box to mark the selected building <b>on the photo</b>.<br>You can switch between satellite and map view and zoom in and out as you like.
                 <a target="_blank" href="/test" id="link">See Demo Video</a>
          </div>
            <% } else if (test=="3") { %>
                    <div class="well" id="instructionWell" hidden>This is the combination of the first two tasks. Please do the following:<br>1.Use <b>Shift+Left Mouse Key</b> to rotate the map and set the right camera direction<br>2. Click one building on the map to select it. It must be a building that you can see in the photo. <br>3. After you have selected a building on the map, a bounding box appears on the photo. Move and resize the bounding box to mark the selected building on the image.<br>You can switch between satellite and map view and zoom in and out as you like. 
                    <a target="_blank" href="/test" id="link">See Demo Video</a>
                    </div>
            <% } else if (test=="4") { %>
                    <div class="well" id="instructionWell" hidden>Press and hold <b>Shift key</b> and select <b>all</b> buildings which are displayed on the photo.
                    <a target="_blank" href="/test" id="link">See Demo Video</a>
            </div> <% }  %>
          
          <button onclick="showPolygon(<%= properties %>)" id="polygon" type="button" hidden>Show polygon</button>
          <form class="form-horizontal" method="post" action="/survey/next" enctype="multipart/form-data" id="nextForm">
          <fieldset>
          <input value="<%= nextImage %>" id="nextImage" name="nextImage" id="hidden1" hidden>
          <input value="x" id="mapRotation" name="mapRotation" hidden>
          <input value="x" id="lat" name="lat" hidden>
          <input value="x"id="lon" name="lon" hidden>
          <input value="<%= test %>" id="test" name="test" hidden>
          <input value="<%= test %>" id="inputName2" name="inputName2" hidden>
          <input value="<%= test %>" id="computerSkills2" name="computerSkills2" hidden>
          <% if (modal) { %>
              <button id="next" type="button" class="btn btn-danger" onclick="submitImageAndModal(<%= properties %>)" style="visibility: hidden;">Next image</button>
          <% } else { %>
             <button id="next" type="button" class="btn btn-danger" onclick="submitImage(<%= properties %>)" style="visibility: hidden;" >Next image</button>
          <% }%>
          <div id="knownDiv">
              <label class="col-lg-4 control-label" style="text-align: left;">Do you know the place shown in the photo?</label>
              <div class="col-lg-8">
                <div class="radio">
                  <label>
                    <input type="radio" name="known" id="muensterYes" value="easily" style="text-align: left;">
                    Yes, I know where it is and I could easily find this place on map.
                  </label>
                </div>
                <div class="radio">
                  <label>
                    <input type="radio" name="known" id="muensterYes" value="probably" style="text-align: left;">
                    I've seen this place and I probably could find it on map. 
                  </label>
                </div>
                <div class="radio">
                  <label>
                    <input type="radio" name="known" id="muensterYes" value="familiar" style="text-align: left;">
                    This place looks familiar to me, but I'm not sure if I can find it on map.
                  </label>
                </div>
                <div class="radio">
                  <label>
                    <input type="radio" name="known" id="muensterNo" value="noIdea" style="text-align: left;">
                    No, I have no idea where it is. 
                  </label>
                </div>
              </div>
            </div>
          <button id="saveKnown" type="button" class="btn btn-danger" onclick="setKnown();" style="position: relative; left: 90%;">Next</button>
          
          </fieldset>
          </form>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="row">
          </div>
          <!-- Map placeholder -->
          <div class="row">
            <div class="col-lg-12">
              <div id="map" disabled></div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      jQuery('#map').fadeTo(500,0.01);

      function showBuildings(buildings, properties, arrow, rotation, all) {

        buildingsSeen = true
        var features = []

        var buildingsArray = JSON.parse(buildings)
        console.log("Show buildings: " + buildingsArray)
        
        for (id in buildingsArray) {
          var buildingCoords = buildingsArray[id].geometry
          var split = buildingCoords.split(":")
          var points = []
          for (node in split) {
            var subsplit = split[node].split(" ")
            var pointCoords = [ parseFloat(subsplit[1]), parseFloat(subsplit[0]) ]
            points.push(ol.proj.transform(pointCoords, 'EPSG:4326', 'EPSG:3857'))
          }
          points.pop()

          var feature = new ol.Feature({
            name: buildingsArray[id].id,
            geometry: new ol.geom.Polygon([points])
          });
          features.push(feature)
        }

        var splitProp = properties.split(",")
        var lat = Number(splitProp[0].slice(1, splitProp[0].length+1))
        var lon = Number(splitProp[1].slice(0, splitProp[0].length))

        var vectorSource4 = new ol.source.Vector({
                features: features
        });
        var myStyle = new ol.style.Style({
          stroke: new ol.style.Stroke({
            color: 'orange',
            width: 3
          }),
          fill: new ol.style.Fill({
            color: 'rgba(255, 153, 0, 0.5)'
          })
        })
        vectorLayer4 = new ol.layer.Vector({
                source: vectorSource4,
                style: myStyle
        });
  
        var newView2 = new ol.View({
            center: ol.proj.transform([ lon, lat ], 'EPSG:4326', 'EPSG:3857'),
            zoom: 17,
            rotation: Number(rotation)
          })

        map.addLayer(vectorLayer4)
        map.setView(newView2)
        map.render()  
        markObjects(all)    
        if (arrow!="no") {
          showMarker(JSON.stringify(properties), arrow, rotation)
        }
      }
      function setKnown(){
          jQuery('#map').fadeTo(500,1);
          document.getElementById("heading1").hidden = false;
          document.getElementById("instructionWell").hidden = false;
          jQuery("#next").css("visibility", "visible")
          jQuery("#knownDiv").css("visibility", "hidden")
          jQuery("#saveKnown").css("visibility", "hidden")

      }
      function activateSubmit() {

      }
      function markObjects(all) {
        var t = (all=="false")
        var s = JSON.stringify(all=="false")
        console.log("ALL: " + all + " " + typeof(all) + " " + t + " " + s)
        var mySelectInteraction = new ol.interaction.Select()
        if (!all) {

          mySelectInteraction.getFeatures().on('add', function(e) {
          if (e.target.getArray().length==1) {
            markObject(); 
          } else {
            jQuery.noConflict();
            jQuery('#myImg').imgAreaSelect({remove:true});
          }
        });

        mySelectInteraction.getFeatures().on('remove', function(e) {
          if (e.target.getArray().length==1) {
            markObject(); 
          } if (e.target.getArray().length==0) {
            jQuery.noConflict();
            jQuery('#myImg').imgAreaSelect({remove:true}); 
          }       
        });
        }      
        map.addInteraction(mySelectInteraction) 
      }

      /* display uploaded image */
      function preview(img, selection) {
        var width = img.width
        var xy = selection.x1 + " " + selection.y1 + " " + selection.x2 + " " + selection.y2
        console.log(xy)
        document.getElementById("objectCoords").value = xy;
        document.getElementById("imageSize").value = width;  
      }

      // mark an object on image using bounding box
      function markObject() {
          document.getElementById("objectCoords").value = "253 120 413 250"
          jQuery.noConflict();
          jQuery('#myImg').imgAreaSelect({
              x1: 253, y1: 120, x2: 413, y2: 250, 
              handles: true,
              onSelectEnd: preview
          });
      }

      /* OpenLayers 3 */
      //create satellite layer
      var sourceBingMaps = new ol.source.BingMaps({
            key: 'Ak-dzM4wZjSqTlzveKz5u0d4IQ4bRzVI309GxmkgSVr1ewS6iPSrOvOKhA-CJlm3',
            imagerySet: 'Aerial',
          });

      // create an interactions and controls
      var mouseZoom = new ol.interaction.MouseWheelZoom();
      var pinch = new ol.interaction.PinchRotate()
      var interaction = new ol.interaction.DragRotate({ condition: ol.events.condition.shiftKeyOnly });
      var pan = new ol.interaction.DragPan();
      var rotateControl = new ol.control.Rotate();
      var zoomControl = new ol.control.Zoom();
      var layerSwitcher = new ol.control.LayerSwitcher();

      var myView = new ol.View({
        center: ol.proj.transform([ 7.617449, 51.963416  ], 'EPSG:4326', 'EPSG:3857'),
        zoom: 15
      })
      var map = new ol.Map({
        target: 'map',
        controls: [rotateControl, zoomControl, layerSwitcher],
        layers: [
          new ol.layer.Tile({
            title: 'OSM',
            type: 'base',
            visible: true,
            source: new ol.source.OSM()
          }),
          new ol.layer.Tile({
            title: 'Satellite',
            type: 'base',
            visible: false,
            source: sourceBingMaps
          })
        ],
        view: myView,
        interactions: [interaction, mouseZoom,pan, pinch ]
      });

      /* convert radians to degrees 
            * @param rad: angle in radians
            * @return angle in degrees
      */
      function radToDegree(rad) {
        var degrees = Math.abs(rad)*(180/Math.PI)
        if (degrees > 360) { 
          degrees = degrees - (Math.floor(degrees / 360)*360) 
        } 
        if (rad<0) {
          degrees = 360 - degrees
        }
        return degrees
      }

      /* show the triangle polygon
        * @param coordsString: coordinates of the polygon nodes (left and right to the focus point)
        * @param lat: Latitude cooridnate of the origin (camera location)
        * @param lon: Longitude coordinate of the origin (camera location)
        * @param targetLat: Latitude coordinate of the focus point
        * @param targetLon: Longitude coordinate of the focus point
      */
      function findTriangle(coordsString, lat, lon, targetLat, targetLon)  {

        var imageCoords = [ Number(lon), Number(lat) ]
        var target = [ Number(targetLon), Number(targetLat) ]

        var split = coordsString.split(" ")
        left = [ parseFloat(split[1]), parseFloat(split[0]) ]
        right = [ parseFloat(split[3]), parseFloat(split[2]) ]
        var point1 = ol.proj.transform(imageCoords, 'EPSG:4326', 'EPSG:3857');
        var point2 = ol.proj.transform(left, 'EPSG:4326', 'EPSG:3857');
        var point3 = ol.proj.transform(right, 'EPSG:4326', 'EPSG:3857');
        var point4 = ol.proj.transform(imageCoords, 'EPSG:4326', 'EPSG:3857');
        var point6 = ol.proj.transform(target, 'EPSG:4326', 'EPSG:3857');
        var feature = new ol.Feature({
          geometry: new ol.geom.Polygon([[point1, point2, point3, point4]]),
        });

        var coords = coordsString + " " + lat + " " + lon
        document.getElementById('polyCoords').value = coords
        var vectorSource2 = new ol.source.Vector({
                features: [feature ]
        });
        var vectorLayer2 = new ol.layer.Vector({
                source: vectorSource2,
        });
        map.addLayer(vectorLayer2)
        /*draw line */
        var featureL = new ol.Feature({
                    geometry: new ol.geom.LineString([point6, point1])
        });
        var vectorSource3 = new ol.source.Vector({
                features: [featureL ]
        });
        var vectorLayer3 = new ol.layer.Vector({
          source: vectorSource3
        });
        map.addLayer(vectorLayer3) 
      }
          
      /* send request to the server to get polygon coordinates */
      function showPolygon(properties) {
        jQuery.get("/showPolygon", { 
          mapRotation : map.getView().getRotation(),
          lat: properties[0],
          lon: properties[1]
        }, function(response){
          findTriangle(response.coords, response.lat, response.lon, response.targetLat, response.targetLon)          
        });
      }

      /* save current map rotation and proceed to the next image */
      function submitImage(properties) {
        console.log("Submit Image ")
        document.getElementById("mapRotation").value = map.getView().getRotation()
        document.getElementById("lat").value = properties[0]
        document.getElementById("lon").value = properties[1]
        jQuery( "#nextForm" ).submit();
      }

      function submitModalForm(properties) {
        console.log("submitModalForm")
        document.getElementById("inputName2").value = document.getElementById("inputName1").value
        document.getElementById("computerSkills2").value = document.getElementById("computerSkills1").value
        console.log(document.getElementById("inputName1").value + " " + document.getElementById("computerSkills1").value)
        document.getElementById("mapRotation").value = map.getView().getRotation()
        document.getElementById("lat").value = properties[0]
        document.getElementById("lon").value = properties[1]
        //jQuery( "#nextForm" ).submit();
      }

      function submitImageAndModal(properties) {
        document.getElementById("mapRotation").value = map.getView().getRotation()
        document.getElementById("lat").value = properties[0]
        document.getElementById("lon").value = properties[1]
        console.log("submitImageAndModal")
        jQuery.noConflict();
        jQuery("#modal").modal("show");
        /*document.getElementById("mapRotation").value = map.getView().getRotation()
        document.getElementById("lat").value = properties[0]
        document.getElementById("lon").value = properties[1]
        jQuery( "#nextForm" ).submit(); */
      }

      function submitObject(properties) {
        jQuery.get("/triangle", { 
          mapRotation : undefined,
          lat: properties[0],
          lon: properties[1],
          objectCoords: document.getElementById("objectCoords").value,
          imageSize: document.getElementById("imageSize").value,
          objectCoordsMap: document.getElementById("objectCoordsMap").value
        }, function(response){
          findTriangle(response.coords, response.lat, response.lon, response.targetLat, response.targetLon)          
        });
      }

      //add marker
      function showMarker(properties1, icon, rotation) {   
          
          if (typeof(properties1)=="string") {
            var splitProp = properties1.split(",")
            var lat = Number(splitProp[0].slice(2, splitProp[0].length))
            var lon = Number(splitProp[1].slice(0, splitProp[0].length-1))
            var properties = [lat,lon]
          } else {
            var properties = properties1
          }
          
          if (icon=="arrow") {
            //document.getElementById("arrow").value = "showArrow"
            marker = true
            arrow = true
            var source = "https://i.imgur.com/gz61vEY.png"
            marker = true 
          if (properties) {
            var lat = properties[0]
            var lon = properties[1]
            var iconFeatures=[];
            var iconFeature = new ol.Feature({
              geometry: new ol.geom.Point(ol.proj.transform([ lon, lat ], 'EPSG:4326', 'EPSG:3857')),
            });
            iconFeatures.push(iconFeature);
            var vectorSource = new ol.source.Vector({
              features: iconFeatures 
            });
            var iconStyle = new ol.style.Style({
              image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
                anchor: [ 0.5, 400],
                scale: 0.2,
                anchorXUnits: 'fraction',
                anchorYUnits: 'pixels',
                src: source
              }))
            });
            vectorLayer = new ol.layer.Vector({
              source: vectorSource,
              style: iconStyle
            });
            var newView = new ol.View({
                  center: ol.proj.transform([ lon, lat ], 'EPSG:4326', 'EPSG:3857'),
                  zoom: 17,
                  rotation: Number(rotation)
            })
            map.addLayer(vectorLayer)
            map.setView(newView)
          }
          } 

            else {
            var source = "http://i1230.photobucket.com/albums/ee488/PerfectlyDarkTails/Map-Marker-Flag-2-Right-Red-icon_zps4cea0902.png"
            marker = true 
          if (properties) {
            var lat = properties[0]
            var lon = properties[1]
            var iconFeatures=[];
            var iconFeature = new ol.Feature({
              geometry: new ol.geom.Point(ol.proj.transform([ lon, lat ], 'EPSG:4326', 'EPSG:3857')),
              name: 'Muenster'
            });
            iconFeatures.push(iconFeature);
            var vectorSource = new ol.source.Vector({
              features: iconFeatures 
            });
            var iconStyle = new ol.style.Style({
              image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
                anchor: [ 0.5, 200],
                scale: 0.2,
                anchorXUnits: 'fraction',
                anchorYUnits: 'pixels',
                src: source
              }))
            });
            vectorLayer = new ol.layer.Vector({
              source: vectorSource,
              style: iconStyle
            });
            var newView = new ol.View({
                  center: ol.proj.transform([ lon, lat ], 'EPSG:4326', 'EPSG:3857'),
                  zoom: 17,
                  rotation: Number(rotation)
            })
            map.addLayer(vectorLayer)
            map.setView(newView)
          }
          }   
      }
      

    </script>
  </body>
</html>